apiVersion: v1
baseDomain: {{ base_domain }}
compute:
- hyperthreading: Enabled
  name: worker
  replicas: {{ num_workers }} 
  architecture: {{ goCPUArchitecture }}
controlPlane:
  architecture: {{ goCPUArchitecture }}
  hyperthreading: Enabled
  name: master
  replicas: {{ num_masters }} 
fips: {{ fips_mode }}
metadata:
  name: {{ cluster_name }} 
{% if boot_mode != "DISKIMAGE" %}
  namespace: {{ cluster_namespace }}
{% endif %}
networking:
{% if ip_stack == "v4" %}
  clusterNetwork:
  - cidr: {{ cluster_subnet_v4 }}
    hostPrefix: {{ cluster_host_prefix_v4 }}
  machineNetwork:
  - cidr: {{ external_subnet_v4 }}
  serviceNetwork:
  - {{ service_subnet_v4 }}
{% elif ip_stack == "v6" %}
  clusterNetwork:
  - cidr: {{ cluster_subnet_v6 }}
    hostPrefix: {{ cluster_host_prefix_v6 }}
  machineNetwork:
  - cidr: {{ external_subnet_v6 }}
  serviceNetwork:
  - {{ service_subnet_v6 }}
{% else %}
  clusterNetwork:
  - cidr: {{ cluster_subnet_v4 }}
    hostPrefix: {{ cluster_host_prefix_v4 }}
  - cidr: {{ cluster_subnet_v6 }}
    hostPrefix: {{ cluster_host_prefix_v6 }}
  machineNetwork:
  - cidr: {{ external_subnet_v4 }}
  - cidr: {{ external_subnet_v6 }}
  serviceNetwork:
  - {{ service_subnet_v4 }}
  - {{ service_subnet_v6 }}
{% endif %}
  networkType: {{ network_type }} 
platform:
  vsphere:
    vcenters:
    - datacenters:
      - {{ vsphere_vcenter_datacenter }}
      server: {{ vsphere_vcenter_server }}
      user: {{ vsphere_vcenter_username }}
      password: {{ vsphere_vcenter_password }}
    failuredomains:
    - name: {{ vsphere_failuredomain_name }}
      server: {{ vsphere_vcenter_server }}
      region: {{ vsphere_failuredomain_region }}
      zone: {{ vsphere_failuredomain_zone }}
      topology:
        datacenter: {{ vsphere_vcenter_datacenter }}
        datastore: {{ vsphere_failuredomain_datastore_path }}
        computeCluster: {{ vsphere_failuredomain_compute_cluster }}
        folder: {{ vsphere_failuredomain_folder_path }}
        networks:
        - {{ vsphere_failuredomain_network }}
    apiVIPs: 
{% set a_vips = api_vips.split(',') %}
{% for api_vip in a_vips %}
      - {{ api_vip }}
{% endfor %}
    ingressVIPs:
{% set i_vips = ingress_vips.split(',') %}
{% for ingress_vip in i_vips %}
      - {{ ingress_vip }}
{% endfor %}
pullSecret: {{ pull_secret_contents }}
sshKey: {{ ssh_pub_key }} 
{% if mirror_images %}
imageContentSources:
{{ image_content_sources }}
{% if (mirror_command == "oc-mirror") and (agent_deploy_mce == "true") %}
- mirrors:
    - "{{ local_registry_dns_name }}:{{ local_registry_port }}/multicluster-engine"
  source: "registry.redhat.io/multicluster-engine"
- mirrors:
    - "{{ local_registry_dns_name }}:{{ local_registry_port }}/rhel8"
  source: "registry.redhat.io/rhel8"
- mirrors:
    - "{{ local_registry_dns_name }}:{{ local_registry_port }}/redhat"
  source: "registry.redhat.io/redhat"
{% endif %}
additionalTrustBundle: {{ ca_bundle_crt }}
{% elif enable_local_registry %}
additionalTrustBundle: {{ registry_certificate }}
{% endif %}
